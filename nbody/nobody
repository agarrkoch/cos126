public class nbody {
    public static void main(String[] args) {
        // Step 1. Parse command-line arguments.
        double stoppingTime = Double.parseDouble(args[0]);
        double dt = Double.parseDouble(args[1]);

        // Step 2. Read the universe from standard input.
        int n = StdIn.readInt();
        double radius = StdIn.readDouble();
        Double[] px = new Double[n];
        Double[] py = new Double[n];
        Double[] vx = new Double[n];
        Double[] vy = new Double[n];
        Double[] mass = new Double[n];
        String[] image = new String[n];

        Double[] fx = new Double[n];
        Double[] fy = new Double[n];

        for (int i = 0; i < n; i++) {
            fx[i] = 0.0;
            fy[i] = 0.0;
        }

        for (int i = 0; i < n; i++) {
            px[i] = StdIn.readDouble();
            py[i] = StdIn.readDouble();
            vx[i] = StdIn.readDouble();
            vy[i] = StdIn.readDouble();
            mass[i] = StdIn.readDouble();
            image[i] = StdIn.readString();
        }

        // Step 3. Initialize standard drawing.
        StdDraw.setXscale(-1 * radius, radius);
        StdDraw.setYscale(-1 * radius, radius);
        StdDraw.enableDoubleBuffering();

        // Step 4. Play music on standard audio.
        StdAudio.playInBackground("2001.wav");

        // Step 5. Simulate the universe.
        for (double timei = 0; timei < stoppingTime; ) {
            // Step 5A. Calculate net forces.
            double GRAVITATIONAL_CONSTANT = 6.674 * Math.pow(10, -11);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (i != j) {
                        double dx = px[j] - px[i];
                        double dy = py[j] - py[i];
                        double radius2 = Math.sqrt((dx * dx) + (dy * dy));
                        double force = (GRAVITATIONAL_CONSTANT * mass[i] * mass[j]) / (radius2
                                * radius2);
                        double fxx = force * (dx / radius2);
                        double fyy = force * (dy / radius2);

                        fx[i] = fx[i] + fxx;
                        fy[i] = fy[i] + fyy;
                    }
                }
            }

            // Step 5B. Update velocities and positions.
            for (int i = 0; i < n; i++) {
                double ax = fx[i] / mass[i];
                double ay = fy[i] / mass[i];

                vx[i] = vx[i] + ax * dt;
                vy[i] = vy[i] + ay * dt;

                px[i] = px[i] + vx[i] * dt;
                py[i] = py[i] + vy[i] * dt;

                fx[i] = 0.0;
                fy[i] = 0.0;
            }

            // Step 5C. Draw universe to standard drawing.
            StdDraw.picture(0, 0, "starfield.jpg");
            for (int i = 0; i < n; i++) {
                StdDraw.picture(px[i], py[i], image[i]);
            }
            StdDraw.show();
            StdDraw.pause(10);

            timei = timei + dt;
        }

        // Step 6. Print universe to standard output.

    }
}
